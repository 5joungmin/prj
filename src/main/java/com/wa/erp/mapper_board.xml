<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--***************************************************-->
<!-- mapper 태그 선언하기 -->
<!-- mapper 태그 안의 namespace 값은 -->
<!-- [원하는 인터페이스 저장 패키지 경로]하고 일치해야한다. -->
<!--***************************************************-->
<mapper namespace="com.wa.erp.BoardDAO">

	<!--=========================================================-->
	<!-- 로그인 아이디와 암호의 존재를 개수를 검색하는  -->
	<!-- select 구문을 내포한 <select> 태그 선언하기    -->
	<!--=========================================================-->
	<select id="getboardList"  parameterType="com.wa.erp.BoardSearchDTO" resultType="com.wa.erp.BoardDTO">
		select
			*
		from ( select rownum "RNUM" , zxcvb.* from (
		 select 
		 		b.b_no,
		 		b.subject,
		 		p.nickname,
		 		to_char(b.reg_date,'YYYY-MM-DD') "reg_date",
		 		b.read_count,
		 		<if test="boardname!='tradeboard'">
		 		b.rec_count,
		 		</if>
		 		b.content 
		 		<if test="boardname=='tradeboard'">
		 		,b.trade_type
		 		,b.price
		 		</if>
		from 
			${boardname} b , person_mem p 
		where 
			1=1
			and
			p.p_no=b.p_no
		 	<if test="keyword!=null and keyword.length()>0">
		 		and ( 
					upper(b.subject) like upper('%${keyword}%')
					or
					upper(b.content) like upper('%${keyword}%')
					)
		 	</if>
                <if test="tradetype != null and tradetype != ''">
                    and trade_type = #{tradetype}
                </if>
		 	
 					  <if test="sort!=null and sort.length()>0">
	                order by  ${sort}	
	                </if>    		
	                 	<![CDATA[
			)zxcvb) where RNUM >= #{begin_rowNo} and RNUM <= #{end_rowNo}
		]]>
	
	</select>

			<select id="getcompanyList"  parameterType="com.wa.erp.BoardSearchDTO" resultType="com.wa.erp.BoardDTO">
		select
			*
		from ( select rownum "RNUM" , zxcvb.* from (
		 select 
		 ci.c_no 
		 ,name
		 ,LISTAGG(wc.welfare_name,',') WITHIN GROUP (ORDER BY wc.welfare_code) AS welfare 
		 ,business_industry as "indus" 
		 ,sales 
		 ,sal_avg 
	     ,round(nvl(AVG(r.star),0),0) as "star_avg"	
		 ,addr
		 ,ci.rec_count
	 from
		    company_mem c
		    
    join 
    	company_info ci on c.c_no = ci.c_no
   left join 
    	company_welfare cw on ci.c_no=cw.c_no
    left join 
		code_welfare wc on cw.welfare_code=wc.welfare_code   
    left join 
    	review r on c.c_no = r.c_no
   
    where 
     	1=1
         <if test="sido!=null and sido.length()>0 and sido!='시/도 선택'">
        and ( 
               upper(addr) like upper('%${sido}%')
                  )
         </if>
       
         <if test="gugun!=null and gugun.length()>0 and gugun!='구/군 선택'">
                and ( 
               upper(addr) like upper('%${gugun}%')
                  )
     	 </if>
		
		 <if test="selectedIndustry!=null and selectedIndustry.length()>0">
		 and business_industry = #{selectedIndustry}
		 </if>
		
		 <if test="keyword!=null and keyword.length()>0">
             and ( 
               upper(name) like upper('%${keyword}%')
                  )
          </if> 
       
	        GROUP BY
          ci.c_no,name,business_industry,sales,sal_avg,addr,ci.rec_count
		<if test="welfare != null">
    having 
    <foreach collection="welfare"  item="tmp"  open=" ( " close=" ) "  separator=" and ">
        LISTAGG(wc.welfare_name, ',') WITHIN GROUP (ORDER BY wc.welfare_name) like '%${tmp}%'         
    </foreach>
</if>
			
		    
		          <if test="sort!=null and sort.length()>0">
	                order by  ${sort}	
	                </if>    
	       		   <if test="multisort1!=null and multisort1!=''">
	       		   order by ${multisort1}
	       	       </if> 
	       	          <if test="multisort2!=null and multisort2!=''">
	       		   ${multisort2}
	       	       </if>    
	       	          <if test="multisort3!=null and multisort3!=''">
	       		   ${multisort3}
	       	       </if>       

	       	<![CDATA[
			)zxcvb) where RNUM >= #{begin_rowNo} and RNUM <= #{end_rowNo}
		]]>
	       
	       </select>
	       
	       
	       
	       
	       
<select id="getcompanyListCnt" parameterType="com.wa.erp.BoardSearchDTO" resultType="int">
		select count(*) from (select count(*) from
		
		
		  company_mem c
		    
    join 
    	company_info ci on c.c_no = ci.c_no
   left join 
    	company_welfare cw on ci.c_no=cw.c_no
    left join 
		code_welfare wc on cw.welfare_code=wc.welfare_code   
    left join 
    	review r on c.c_no = r.c_no
   
    where 
     	1=1
         <if test="sido!=null and sido.length()>0 and sido!='시/도 선택'">
        and ( 
               upper(addr) like upper('%${sido}%')
                  )
         </if>
       
         <if test="gugun!=null and gugun.length()>0 and gugun!='구/군 선택'">
                and ( 
               upper(addr) like upper('%${gugun}%')
                  )
     	 </if>
		
		 <if test="selectedIndustry!=null and selectedIndustry.length()>0">
		 and business_industry = #{selectedIndustry}
		 </if>
		
		 <if test="keyword!=null and keyword.length()>0">
             and ( 
               upper(name) like upper('%${keyword}%')
                  )
          </if> 
       
	        GROUP BY
          ci.c_no,name,business_industry,sales,sal_avg,addr     
		<if test="welfare != null">
    having 
    <foreach collection="welfare"  item="tmp"  open=" ( " close=" ) "  separator=" and ">
        LISTAGG(wc.welfare_name, ',') WITHIN GROUP (ORDER BY wc.welfare_name) like '%${tmp}%'         
    </foreach>
</if>	
		)
		
	</select>

	<select id="getcompanyListAllCnt"  parameterType="com.wa.erp.BoardSearchDTO" resultType="int">
		select count(*) from company_info
	</select>

	
	<select id="gettimeShareList"  resultType="com.wa.erp.BoardDTO">
		 select  
		 		f.b_no
		 		, p.name 
		 		, p.phone
		 		, f.preferred_work
		 		, f.start_time
		 		, f.end_time
		 		, to_char(f.reg_date,'YYYY-MM-DD') as "reg_date" 
		 from 
		 		freelancer f, person_mem p 
		 where 
		 		f.p_no = p.p_no 
	</select>

	<select id="getbuupList"  resultType="com.wa.erp.BoardDTO">
		 select  
		 		f.b_no
		 		, p.name 
		 		, p.phone
		 		, f.hope_work
		 		, f.start_time
		 		, f.end_time
		 		, to_char(f.reg_date,'YYYY-MM-DD') as "reg_date" 
		 from 
		 		part_time f, person_mem p 
		 where 
		 		f.p_no = p.p_no
	</select>


	<select id="getprjList"  resultType="com.wa.erp.BoardDTO">
		 select  subject, c.field_name, reg_date from project b, competition_project_field_code c, person_mem p where  p.p_no = b.p_no and b.field_code = c.code_field
	</select>

	<select id="getgongMoList"  resultType="com.wa.erp.BoardDTO">
		 select  subject,read_count, reg_date from competition b, company_mem c where b.c_no = c.c_no  
	</select>
	
	<select id="getgongGoList" resultType="com.wa.erp.BoardDTO">
		select c_no from gonggo
	</select>
	
	<select id="getBoard" parameterType="java.util.HashMap" resultType="com.wa.erp.BoardDTO">
		select
			p.p_no,
			b.b_no,
			p.nickname,
			b.subject,
			b.content,
			b.read_count,
			to_char(b.reg_date,'YYYY-MM-DD') as "reg_date",
			<if test="tablename!='tradeboard'">
			b.rec_count
			</if>
			<if test="tablename=='tradeboard'">
			b.price,
			b.trade_type
			</if>
		from 
			${tablename} b, person_mem p
		where
            b.p_no = p.p_no
            and
			b.b_no=#{b_no}
	</select>
	
	<select id="getComment" parameterType="java.util.HashMap" resultType="com.wa.erp.BoardDTO">
		select 
				c.comment_no
				,p.p_no
				,p.nickname
                , to_char(c.reg_date,'YYYY-MM-DD') as "reg_date"
                , c.content
                ,c.rec_count
        from person_mem p, ${comment} c
        where
            c.p_no = p.p_no
            and
            c.b_no = #{b_no}
        <choose>
        	<when test="sort!=null and sort.length()>0">
        	order by
       			${sort}
        	</when>
        	<otherwise>
        	order by
        		c.reg_date asc
        	</otherwise>
        </choose>
       	
	</select>
	
	<select id="getcompanyDetail" parameterType="int" resultType="com.wa.erp.BoardDTO">
		select
		    m.c_no,
			m.name,
			i.url,
			m.email,
			i.volume,
			i.sales,
			i.emp_no,
			i.birth,
			m.ceo_name,
			m.call,
			i.sal_avg
		from 
			company_mem m ,company_info i 
		where 
			#{c_no}=m.c_no and m.c_no=i.c_no 
</select>

<select id="getcompanyWelfare" parameterType="int" resultType="com.wa.erp.BoardDTO">
	select m.c_no,    LISTAGG(cw.welfare_name,',') WITHIN GROUP (ORDER BY cw.welfare_code) AS welfare
from company_mem m , code_welfare cw, company_welfare c
where
#{c_no}=m.c_no
and
m.c_no=c.c_no
and
cw.welfare_code=c.welfare_code

group by m.c_no
		</select>	   




<select id="reviewContent"  parameterType="int" resultType="com.wa.erp.BoardDTO">
			select
				p_no,
				c_no,
				content,
				   star,
				   rec_count 
			from 
			     review 
			where 
			    c_no=#{c_no}

</select>
	
	<select id="getreviewContent"  parameterType="int" resultType="com.wa.erp.BoardReviewDTO">
	select
	r_no,
	p_no,
		content,
		star
	from
		review
	where
		c_no = ${c_no}
		<if test="reviewSort!=null"> 
		 order by ${reviewSort}	 
		</if>
	</select>
	
	<select  id="getReviewListCnt" parameterType="int"  resultType="int">
		select count(*) from review where c_no= ${c_no}
	</select>
	
	<select id="getReviewListAllCnt" resultType="int">
		select count(*) from review
	</select>
	
	<select id="getcompanyListDetail" parameterType="int" resultType="com.wa.erp.BoardDTO">
	select
	    m.c_no,
		m.name,
		i.url,
		m.email,
		i.volume,
		i.sales,
		i.emp_no,
		i.birth,
		m.ceo_name,
		m.call,
		i.sal_avg
	from 
		company_mem m ,company_info i 
	where 
		#{c_no}=m.c_no and m.c_no=i.c_no 
</select>
	
	<update id="updateReadCount" parameterType="java.util.Map">
		update
			${tablename}
		set 
			read_count = read_count + 1
		where 
			b_no=#{b_no}
	</update>
	
	<select id="getboardListCnt" parameterType="com.wa.erp.BoardSearchDTO" resultType="int">
		select count(*) from ${boardname}
			where
				1=1
		<if test="keyword!=null and keyword.length()>0">
		 	and ( 
					upper(subject) like upper('%${keyword}%')
					or
					upper(content) like upper('%${keyword}%')
					)
		 	</if>
		 	<if test="tradetype != null and tradetype.length()>0">
		 	and
		 		trade_type=#{tradetype}
		 	</if>
	</select>

	<select id="getboardListAllCnt"  parameterType="com.wa.erp.BoardSearchDTO" resultType="int">
		select count(*) from ${boardname}
	</select>
	
	
	<select id="getCommentLike" parameterType="java.util.Map" resultType="com.wa.erp.BoardDTO">
	select
    	comment_no as "like_no"
	from 
    	like_comment
	where
    	comment_table=#{comment}
    	<if test="p_no != 0">
    	and
    	p_no = #{p_no}
    	</if>
    	<if test="c_no != 0">
    	and
    	c_no = #{c_no}
    	</if>
    	and
    	b_no=#{b_no}     
    order by
    	1 asc
	</select>
	
	<select id="getLikeCompany" parameterType="int" resultType="com.wa.erp.BoardDTO">
		select
			c_no
		from 
			like_company
		where
			p_no = #{p_no}
	</select>
	
		<select id="getNoticeList"  parameterType="com.wa.erp.BoardSearchDTO" resultType="com.wa.erp.BoardDTO">

		 select 
		 		category,
		 		n_no,
		 		subject,
		 		content,
		 		    to_char(reg_date, 'YYYY-MM-DD') as reg_date,

		 		read_count
		from 
			notice 
		where 
			1=1

		 	
		 	order  by reg_date desc

	</select>
	
	
		<select id="getnoticeListCnt" parameterType="com.wa.erp.BoardSearchDTO" resultType="int">
		select count(*) from notice
			where
				1=1
		<if test="keyword!=null and keyword.length()>0">
		 	and ( 
					upper(subject) like upper('%${keyword}%')
					or
					upper(content) like upper('%${keyword}%')
					)
		 	</if>
	
	</select>

	<select id="getnoticeListAllCnt"  parameterType="com.wa.erp.BoardSearchDTO" resultType="int">
		select count(*) from notice	
	</select>
	
	<select id="getNoticeDetail" parameterType="int" resultType="com.wa.erp.BoardDTO">
	select 
	n_no,
	subject,
	content,
	read_count,
	    to_char(reg_date, 'YYYY-MM-DD') as reg_date,
	    category
	from notice
	where
	n_no=#{n_no}
	
	
	</select>				
		<update id="updateNoticeReadcount" parameterType="com.wa.erp.BoardDTO">
		update
				notice
		set 
			read_count = read_count + 1
		where 
			n_no=#{n_no}
	</update>
	
	<select id="getMainNoticeList"  parameterType="com.wa.erp.BoardSearchDTO" resultType="com.wa.erp.BoardDTO">
		select
			*
		from ( select rownum "RNUM" , zxcvb.* from (
		 select 
		 		category,
		 		n_no,
		 		subject,
		 		content,
		 		reg_date,
		 		read_count
		from 
			notice 
		where 
			1=1
			and
			category='main'

		 	
		 	order  by reg_date desc
		 	<![CDATA[
 			)zxcvb) where RNUM >= #{begin_rowNo} and RNUM <= #{end_rowNo} 
		]]> 
	</select>
	<!--	
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		<select ~> 태그 안의 속성
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			id="namespace값마지막의인터페이스내부의메소드명중하나"
			~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			parameterType="SQL구문에참여하는외부데이터의타입"
			~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			resultType="SQL구문의결과값을저장할수있는자바자료형"
			~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		#{mid}의미
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		 	  mid   는 현재 참여하고 있는 HashMap 객체의 키값을 의미한다.
		      {mid} 는  "mid" 라는 키값에 대응하는 데이터를 표현하라는 의미
		       #    은 표현하는 데이터가 
								문자면 
									표현 데이터 앞뒤에  '  를 붙이고
		                        숫자면 
									표현 데이터 앞뒤에  '  를 붙이지 말란 의미이다.
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		 #{pwd}의미
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		 	  pwd   는 현재 참여하고 있는 HashMap 객체의 키값을 의미한다.
		      {pwd} 는  "pwd" 라는 키값에 대응하는 데이터를 표현하라는 의미
		       #    은 표현하는 데이터가 
								문자면 
									표현 데이터 앞뒤에  '  를 붙이고
		                        숫자면 
									표현 데이터 앞뒤에  '  를 붙이지 말란 의미이다.
		-->
		<select id="getpersonMemList"  parameterType="com.wa.erp.BoardSearchDTO" resultType="com.wa.erp.BoardDTO">
			select
			*
		from ( select rownum "RNUM" , zxcvb.* from (select 
name,
    TO_CHAR(reg_date, 'YYYY-MM-DD') AS reg_date,

pid,
pwd,
addr,
email,
phone
from person_mem
	 	<![CDATA[
 			)zxcvb) where RNUM >= #{begin_rowNo} and RNUM <= #{end_rowNo} 
		]]> 
	</select>
	
<select id="getMemberList"  parameterType="com.wa.erp.BoardSearchDTO" resultType="com.wa.erp.BoardDTO">
   select
			*
		from ( select rownum "RNUM" , zxcvb.* from (
        SELECT
            member_type,
            name,
            c_no,
            p_no,
            is_block,
            reg_date,
            id,
            pwd,
            addr,
            email,
            phone,
            ROW_NUMBER() OVER (ORDER BY reg_date) AS row_num
        FROM (
            SELECT
                '개인' AS member_type,
                name,
                0 as c_no,
                p_no,
                is_block,
                TO_CHAR(reg_date, 'YYYY-MM-DD') AS reg_date,
                pid AS id,
                pwd,
                addr,
                email,
                phone
            FROM person_mem 
          where
1=1
            		<if test="member_type!= null and member_type.length()>0">
		 	and		'개인'=#{member_type}
		 	</if>
            UNION ALL
            SELECT
                '기업' AS member_type,
                c.name,
                c.c_no as c_no,
                0 as p_no,
                'no' as is_block,
                TO_CHAR(c.reg_date, 'YYYY-MM-DD') AS reg_date,
                c.cid AS id,
                c.pwd,
                ci.addr,
                c.email,
                c.ceo_phone AS phone
            FROM company_mem c
            INNER JOIN company_info ci ON c.c_no = ci.c_no
            		<if test="member_type!= null and member_type.length()>0">
		  where
		 		'기업'=#{member_type}
		 	</if>
        )
   	<![CDATA[
 			)zxcvb) where (RNUM between #{begin_rowNo} and  #{end_rowNo})
		]]> 
 
	</select>
	
			<select id="getMemberListCnt" parameterType="com.wa.erp.BoardSearchDTO" resultType="int">
	SELECT SUM(total_count) AS total_count
FROM (
    SELECT COUNT(*) AS total_count FROM person_mem 
     where 
      	1=1
    <if test="member_type=='기업'">
        and p_no = 0
    </if>
       <if test="member_type=='개인'">
        and p_no > 0
    </if>
    UNION ALL
    SELECT COUNT(*) FROM company_mem 

       <if test="member_type=='기업'">
      where c_no > 0
    </if>
       <if test="member_type=='개인'">
      where  c_no = 0
    </if>  
)      
      

	</select>

	<select id="getMemberListAllCnt"  parameterType="com.wa.erp.BoardSearchDTO" resultType="int">

		SELECT SUM(total_count) AS total_count
FROM (
    SELECT COUNT(*) AS total_count FROM person_mem      
    UNION ALL
    SELECT COUNT(*) FROM company_mem 
)        
	</select>
	


	

<select id="getBlockMemberListAllCnt"  parameterType="com.wa.erp.BoardSearchDTO" resultType="int">
    SELECT COUNT(*) FROM person_mem      where 
      	is_block='block'
	</select>
	<select id="getBlockMemberListCnt"  parameterType="com.wa.erp.BoardSearchDTO" resultType="int">
    SELECT COUNT(*) FROM person_mem      where 
      	is_block='block'
	</select>
	<select id="getBlockMemberList"  parameterType="com.wa.erp.BoardSearchDTO" resultType="com.wa.erp.BoardDTO">

	select
		p_no,
		name,
		 TO_CHAR(reg_date, 'YYYY-MM-DD') AS reg_date,
		 pid AS id ,
		pwd ,
		addr,
		email ,
		is_block,
		phone
	from 
		person_mem 
	where
		 is_block='block'
</select>
</mapper>
 